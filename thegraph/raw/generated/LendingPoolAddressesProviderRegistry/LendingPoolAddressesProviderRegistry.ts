// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AddressesProviderRegistered extends ethereum.Event {
  get params(): AddressesProviderRegistered__Params {
    return new AddressesProviderRegistered__Params(this);
  }
}

export class AddressesProviderRegistered__Params {
  _event: AddressesProviderRegistered;

  constructor(event: AddressesProviderRegistered) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class AddressesProviderUnregistered extends ethereum.Event {
  get params(): AddressesProviderUnregistered__Params {
    return new AddressesProviderUnregistered__Params(this);
  }
}

export class AddressesProviderUnregistered__Params {
  _event: AddressesProviderUnregistered;

  constructor(event: AddressesProviderUnregistered) {
    this._event = event;
  }

  get newAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class LendingPoolAddressesProviderRegistry extends ethereum.SmartContract {
  static bind(address: Address): LendingPoolAddressesProviderRegistry {
    return new LendingPoolAddressesProviderRegistry(
      "LendingPoolAddressesProviderRegistry",
      address
    );
  }

  isOwner(): boolean {
    let result = super.call("isOwner", "isOwner():(bool)", []);

    return result[0].toBoolean();
  }

  try_isOwner(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isOwner", "isOwner():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isAddressesProviderRegistered(_provider: Address): BigInt {
    let result = super.call(
      "isAddressesProviderRegistered",
      "isAddressesProviderRegistered(address):(uint256)",
      [ethereum.Value.fromAddress(_provider)]
    );

    return result[0].toBigInt();
  }

  try_isAddressesProviderRegistered(
    _provider: Address
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "isAddressesProviderRegistered",
      "isAddressesProviderRegistered(address):(uint256)",
      [ethereum.Value.fromAddress(_provider)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAddressesProvidersList(): Array<Address> {
    let result = super.call(
      "getAddressesProvidersList",
      "getAddressesProvidersList():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_getAddressesProvidersList(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "getAddressesProvidersList",
      "getAddressesProvidersList():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class RegisterAddressesProviderCall extends ethereum.Call {
  get inputs(): RegisterAddressesProviderCall__Inputs {
    return new RegisterAddressesProviderCall__Inputs(this);
  }

  get outputs(): RegisterAddressesProviderCall__Outputs {
    return new RegisterAddressesProviderCall__Outputs(this);
  }
}

export class RegisterAddressesProviderCall__Inputs {
  _call: RegisterAddressesProviderCall;

  constructor(call: RegisterAddressesProviderCall) {
    this._call = call;
  }

  get _provider(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _id(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class RegisterAddressesProviderCall__Outputs {
  _call: RegisterAddressesProviderCall;

  constructor(call: RegisterAddressesProviderCall) {
    this._call = call;
  }
}

export class UnregisterAddressesProviderCall extends ethereum.Call {
  get inputs(): UnregisterAddressesProviderCall__Inputs {
    return new UnregisterAddressesProviderCall__Inputs(this);
  }

  get outputs(): UnregisterAddressesProviderCall__Outputs {
    return new UnregisterAddressesProviderCall__Outputs(this);
  }
}

export class UnregisterAddressesProviderCall__Inputs {
  _call: UnregisterAddressesProviderCall;

  constructor(call: UnregisterAddressesProviderCall) {
    this._call = call;
  }

  get _provider(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class UnregisterAddressesProviderCall__Outputs {
  _call: UnregisterAddressesProviderCall;

  constructor(call: UnregisterAddressesProviderCall) {
    this._call = call;
  }
}
